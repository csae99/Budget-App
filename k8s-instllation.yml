---
- hosts: all
  become: yes
  tasks:
    - name: create the 'ubuntu' user
      ansible.builtin.user:
        name: ubuntu
        groups: sudo
        shell: /bin/bash
        append: yes

    - name: allow 'ubuntu' to have passwordless sudo
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the ubuntu user
      ansible.posix.authorized_key:
        user: ubuntu
        key: "{{ lookup('file', '~/.ssh/authorized_keys') }}"

    - name: create Docker config directory
      ansible.builtin.file:
        path: /etc/docker
        state: directory

    - name: changing Docker to systemd driver
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"]
          }

    - name: install Docker
      ansible.builtin.apt:
        name: docker.io
        state: present
        update_cache: true

    - name: install APT Transport HTTPS
      ansible.builtin.apt:
        name: apt-transport-https
        state: present

    - name: add Kubernetes apt-key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      ansible.builtin.apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes

    - name: install kubelet
      ansible.builtin.apt:
        name: kubelet=1.22.4-00
        state: present
        update_cache: true

    - name: install kubeadm
      ansible.builtin.apt:
        name: kubeadm=1.22.4-00
        state: present

- hosts: masters
  become: yes
  tasks:
    - name: install kubectl
      ansible.builtin.apt:
        name: kubectl=1.22.4-00
        state: present
        force: yes

    - name: get join command
      ansible.builtin.command:
        cmd: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      ansible.builtin.set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      ansible.builtin.command:
        cmd: "{{ hostvars['master1'].join_command }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
